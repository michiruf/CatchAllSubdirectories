services:
  # The base service is a workaround to allow building the base image first,
  # when we just want to have a compose file that is able to run the containers
  # Check https://github.com/devthefuture-org/dockerfile-x/issues/6 again to see
  # if there is any progress on how to use "incremental" Dockerfiles
  base:
    build:
      context: ..
      tags:
        - base
    entrypoint: bash -c
    command: exit 0
    restart: no

  app:
    container_name: app
    build: .
    ports:
      - '8022:22'
      - '8080:80'
      - '8443:443'
    # https://dockerfile.readthedocs.io/en/latest/content/DockerImages/dockerfiles/php-nginx.html#environment-variables
    environment:
      - USE_PUBLIC_KEY
      - SSH_PUBLIC_KEY
      - SSH_PASSWORD
      # To debug sshd:
      #- SERVICE_SSH_OPTS=-d

      # Laravel env (prefixed with 'LARAVEL_')
      - LARAVEL_APP_ENV=production
      - LARAVEL_APP_DEBUG=false
      - LARAVEL_REDIS_HOST=redis
      - LARAVEL_DB_CONNECTION=mysql
      - LARAVEL_DB_HOST=mysql
      - LARAVEL_DB_PORT=3306
      - LARAVEL_DB_DATABASE=${MYSQL_DATABASE}
      - LARAVEL_DB_USERNAME=${MYSQL_USER}
      - LARAVEL_DB_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - 'app-data:/app/'
      # Persist host keys:
      - 'ssh-config-data:/etc/ssh/'
      - '/etc/timezone:/etc/timezone:ro'
    networks:
      - default
    depends_on:
      - base
      - mysql
      - redis
    restart: unless-stopped
    stdin_open: true
    tty: true

  mysql:
    container_name: mysql
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
    volumes:
      - 'mysql-data:/var/lib/mysql/'
      - '/etc/timezone:/etc/timezone:ro'
    networks:
      - default
    restart: unless-stopped
    stdin_open: true
    tty: true

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      # Redis should not be persisted for performance reasons
      #- 'redis-data:/data/'
      - '/etc/timezone:/etc/timezone:ro'
    networks:
      - default
    # command: redis-server --save 20 1 --loglevel warning --requirepass $PASSWORD
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  app-data:
    driver: local
  ssh-config-data:
    driver: local
  mysql-data:
    driver: local
  redis-data:
    driver: local
